
(*
 Copyright (C) 2012 Emmanuel Pouthier

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program. If not, see <http://www.gnu.org/licenses/>.
*)



(* zut *)
zut ::= ( comment | statement )*;

separator ::= {SPACE} | {TABULATION-H} | {END-LINE};

comment ::= line-comment | block-comment;
line-comment ::= "//" .* {END-LINE};
block-comment ::= "/*" .* "*/";




(* statement *)
statement ::= variable-statement | affectation-statement | enum-statement | if-statement | while-statement | do-while-statement | for-statement | foreach-statement | switch-statement;

block-statement ::= "{" statement* "}";

variable-statement ::= "var" separator variable-identifier [ "=" expression ] ";";
affectation-statement ::= variable-identifier "=" expression ";";
enum-statement ::= "enum" separator variable-identifier "{" ( constante-identifier "=" . value-identifier )* "}";

if-statement ::= "if" "(" expression ")" block-statement else-if-statement* [ else-statement ];
else-if-statement ::= "else" "if" "(" expression ")" block-statement;
else-statement ::= "else" block-statement;

while-statement ::= "while" "(" expression ")" block-statement;
do-while-statement ::= "do" block-statement "while" "(" expression ")" ";";
for-statement ::= "for" "(" [ "var" separator ] variable-identifier [ "=" expression ] ";" expression ";" variable-identifier "=" expression ")" block-statement;
foreach-statement ::= "foreach" ;

switch-statement ::= "switch" "(" variable-identifier ")" "{" case-statement* [ default-statement ] "}";
case-statement ::= "case" separator;
default-statement ::= "default" separator;

break-statement ::= "break" ";";
continue-statement ::= "continue" ";";


(* expression *)

(* modifier *)

